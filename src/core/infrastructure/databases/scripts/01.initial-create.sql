CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;

CREATE TABLE roles (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(150) NOT NULL,
    description character varying(500) NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE users (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    email character varying(350) NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE workflows (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(150) NOT NULL,
    description character varying(500) NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_workflows PRIMARY KEY (id)
);

CREATE TABLE workflow_steps (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name character varying(150) NOT NULL,
    description character varying(500) NULL,
    approved_next_step_id integer NULL,
    rejected_next_step_id integer NULL,
    "order" integer NULL,
    maximum_time_in_minutes integer NULL,
    auto_approve_on_threshold boolean NULL,
    workflow_id integer NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_workflow_steps PRIMARY KEY (id),
    CONSTRAINT fk_workflow_steps_workflow_steps_approved_next_step_id FOREIGN KEY (approved_next_step_id) REFERENCES workflow_steps (id),
    CONSTRAINT fk_workflow_steps_workflow_steps_rejected_next_step_id FOREIGN KEY (rejected_next_step_id) REFERENCES workflow_steps (id),
    CONSTRAINT fk_workflow_steps_workflows_workflow_id FOREIGN KEY (workflow_id) REFERENCES workflows (id)
);

CREATE TABLE workflow_step_roles (
    role_id integer NOT NULL,
    workflow_step_id integer NOT NULL,
    CONSTRAINT pk_workflow_step_roles PRIMARY KEY (role_id, workflow_step_id),
    CONSTRAINT fk_workflow_step_roles_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE,
    CONSTRAINT fk_workflow_step_roles_workflow_steps_workflow_step_id FOREIGN KEY (workflow_step_id) REFERENCES workflow_steps (id) ON DELETE CASCADE
);

CREATE TABLE workflow_instances (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    current_step_id integer NULL,
    base_workflow_id integer NOT NULL,
    is_completed boolean NOT NULL,
    start_date timestamp with time zone NOT NULL,
    end_date timestamp with time zone NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_workflow_instances PRIMARY KEY (id),
    CONSTRAINT fk_workflow_instances_workflows_base_workflow_id FOREIGN KEY (base_workflow_id) REFERENCES workflows (id) ON DELETE CASCADE
);

CREATE TABLE workflow_step_instances (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    base_step_id integer NOT NULL,
    workflow_instance_id integer NOT NULL,
    expires_in timestamp with time zone NULL,
    auto_approve_on_threshold boolean NULL,
    is_approved boolean NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_workflow_step_instances PRIMARY KEY (id),
    CONSTRAINT fk_workflow_step_instances_workflow_instances_workflow_instanc FOREIGN KEY (workflow_instance_id) REFERENCES workflow_instances (id) ON DELETE CASCADE,
    CONSTRAINT fk_workflow_step_instances_workflow_steps_base_step_id FOREIGN KEY (base_step_id) REFERENCES workflow_steps (id) ON DELETE CASCADE
);

CREATE TABLE workflow_step_approvals (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    is_approved boolean NULL,
    comments character varying(500) NOT NULL,
    workflow_step_instance_id integer NULL,
    created_at timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
    created_by character varying(350) NOT NULL DEFAULT 'netflow',
    last_modified_at timestamp with time zone NULL,
    last_modified_by character varying(350) NULL,
    CONSTRAINT pk_workflow_step_approvals PRIMARY KEY (id),
    CONSTRAINT fk_workflow_step_approvals_workflow_step_instance_workflow_ste FOREIGN KEY (workflow_step_instance_id) REFERENCES workflow_step_instances (id)
);

INSERT INTO roles (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (1, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Supervisors review and approve the work hours and activities recorded by their respective team members.', NULL, NULL, 'Employee Supervisor');
INSERT INTO roles (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (2, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Department review and approve the employee time records for their departments or teams. They ensure accuracy and compliance with department-specific policies.', NULL, NULL, 'Department Manager');
INSERT INTO roles (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (3, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Resource managers review and approve the overall payroll data, ensuring that the allocation of resources and budget is accurate and aligns with the organization''s goals.', NULL, NULL, 'Resource Manager');
INSERT INTO roles (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (4, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Payroll specialists are responsible for calculating gross pay, deductions, and net pay for each employee. They ensure accuracy and compliance with tax regulations.', NULL, NULL, 'Payroll Specialist');
INSERT INTO roles (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (5, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Tax compliance officers oversee tax withholding and ensure that it is done accurately based on employee information and tax laws.', NULL, NULL, 'Tax Compliance Officer');

INSERT INTO users (id, email)
VALUES (1, 'eduardo.lour.silva@gmail.com');

INSERT INTO workflows (id, created_at, created_by, description, last_modified_at, last_modified_by, name)
VALUES (1, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Manages employee compensation with precision, covering timekeeping, tax compliance, and benefit administration.', NULL, NULL, 'Payroll Process');

INSERT INTO workflow_steps (id, approved_next_step_id, created_at, created_by, description, last_modified_at, last_modified_by, name, "order", rejected_next_step_id, workflow_id, auto_approve_on_threshold, maximum_time_in_minutes)
VALUES (5, NULL, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Ensure accurate tax withholding based on employee information.', NULL, NULL, 'Tax Withholding', NULL, NULL, 1, TRUE, 5);

INSERT INTO workflow_step_roles (role_id, workflow_step_id)
VALUES (5, 5);

INSERT INTO workflow_steps (id, approved_next_step_id, created_at, created_by, description, last_modified_at, last_modified_by, name, "order", rejected_next_step_id, workflow_id)
VALUES (4, 5, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Calculate gross pay, deductions, and net pay for each employee.', NULL, NULL, 'Payroll Calculation', NULL, NULL, 1);

INSERT INTO workflow_step_roles (role_id, workflow_step_id)
VALUES (4, 4);

INSERT INTO workflow_steps (id, approved_next_step_id, created_at, created_by, description, last_modified_at, last_modified_by, name, "order", rejected_next_step_id, workflow_id)
VALUES (3, 4, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Resource management department reviews and approves payroll data.', NULL, NULL, 'Resource Management Approval', NULL, NULL, 1);

INSERT INTO workflow_step_roles (role_id, workflow_step_id)
VALUES (3, 3);

INSERT INTO workflow_steps (id, approved_next_step_id, created_at, created_by, description, last_modified_at, last_modified_by, name, "order", rejected_next_step_id, workflow_id)
VALUES (2, 3, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Managers review and approve employee time records.', NULL, NULL, 'Manager Approval', NULL, NULL, 1);

INSERT INTO workflow_step_roles (role_id, workflow_step_id)
VALUES (2, 2);

INSERT INTO workflow_steps (id, approved_next_step_id, created_at, created_by, description, last_modified_at, last_modified_by, name, "order", rejected_next_step_id, workflow_id)
VALUES (1, 2, TIMESTAMPTZ '2023-09-07 03:00:00Z', 'netflow', 'Employees record their work hours and activities.', NULL, NULL, 'Employee Timekeeping', NULL, NULL, 1);

INSERT INTO workflow_step_roles (role_id, workflow_step_id)
VALUES (1, 1);

CREATE UNIQUE INDEX ix_roles_name ON roles (name);

CREATE UNIQUE INDEX ix_users_email ON users (email);

CREATE INDEX ix_workflow_instances_base_workflow_id ON workflow_instances (base_workflow_id);

CREATE INDEX ix_workflow_instances_current_step_id ON workflow_instances (current_step_id);

CREATE INDEX ix_workflow_step_approvals_workflow_step_instance_id ON workflow_step_approvals (workflow_step_instance_id);

CREATE INDEX ix_workflow_step_instances_base_step_id ON workflow_step_instances (base_step_id);

CREATE INDEX ix_workflow_step_instances_workflow_instance_id ON workflow_step_instances (workflow_instance_id);

CREATE INDEX ix_workflow_step_roles_workflow_step_id ON workflow_step_roles (workflow_step_id);

CREATE UNIQUE INDEX ix_workflow_steps_approved_next_step_id ON workflow_steps (approved_next_step_id);

CREATE UNIQUE INDEX ix_workflow_steps_rejected_next_step_id ON workflow_steps (rejected_next_step_id);

CREATE INDEX ix_workflow_steps_workflow_id ON workflow_steps (workflow_id);

CREATE UNIQUE INDEX ix_workflows_name ON workflows (name);

ALTER TABLE workflow_instances ADD CONSTRAINT fk_workflow_instances_workflow_step_instance_current_step_id FOREIGN KEY (current_step_id) REFERENCES workflow_step_instances (id);

SELECT setval(
    pg_get_serial_sequence('roles', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM roles) + 1,
        nextval(pg_get_serial_sequence('roles', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('users', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM users) + 1,
        nextval(pg_get_serial_sequence('users', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('workflows', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM workflows) + 1,
        nextval(pg_get_serial_sequence('workflows', 'id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('workflow_steps', 'id'),
    GREATEST(
        (SELECT MAX(id) FROM workflow_steps) + 1,
        nextval(pg_get_serial_sequence('workflow_steps', 'id'))),
    false);

INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20230914201957_01.initial-create', '7.0.8');

COMMIT;

